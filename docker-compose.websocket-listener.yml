services:
  # MongoDB database (shared with scheduler)
  mongodb:
    image: mongo:7.0
    container_name: ethereum-websocket-mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: ethereum_raw_data
    ports:
      - "27018:27017"  # Different port to avoid conflict with scheduler
    command:
      - "--bind_ip_all"
      - "--maxConns=1000"
      - "--wiredTigerCacheSizeGB=0.25"
      - "--slowms=1000"
      - "--profile=1"
    volumes:
      - websocket_mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ethereum-websocket-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--quiet"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 768M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # NATS JetStream for messaging (optional)
  nats:
    image: nats:2.10-alpine
    container_name: ethereum-websocket-nats
    restart: always
    command:
      - "--jetstream"
      - "--store_dir=/data"
      - "--max_memory_store=256MB"
      - "--max_file_store=1GB"
    ports:
      - "4222:4222"
      - "8222:8222"  # Management interface
    volumes:
      - websocket_nats_data:/data
    networks:
      - ethereum-websocket-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Ethereum WebSocket Listener application
  ethereum-websocket-listener:
    build:
      context: .
      dockerfile: Dockerfile.websocket-listener
    container_name: ethereum-websocket-listener-app
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
      nats:
        condition: service_healthy
    environment:
      # MongoDB Configuration
      MONGO_URI: mongodb://admin:password@mongodb:27017/ethereum_raw_data?authSource=admin&maxPoolSize=20&minPoolSize=5&maxIdleTimeMS=60000&serverSelectionTimeoutMS=10000&socketTimeoutMS=60000&connectTimeoutMS=15000&heartbeatFrequencyMS=30000&retryWrites=true&retryReads=true&maxConnecting=5
      MONGO_DATABASE: ethereum_raw_data
      MONGO_CONNECT_TIMEOUT: 15s
      MONGO_MAX_POOL_SIZE: 20

      # Ethereum Configuration
      ETHEREUM_RPC_URL: ${ETHEREUM_RPC_URL:-https://mainnet.infura.io/v3/YOUR_PROJECT_ID}
      ETHEREUM_WS_URL: ${ETHEREUM_WS_URL:-wss://mainnet.infura.io/ws/v3/YOUR_PROJECT_ID}

      # Application Configuration
      APP_ENV: production
      LOG_LEVEL: info

      # WebSocket Configuration - Optimized for real-time processing
      WEBSOCKET_RECONNECT_ATTEMPTS: ${WEBSOCKET_RECONNECT_ATTEMPTS:-10}
      WEBSOCKET_RECONNECT_DELAY: ${WEBSOCKET_RECONNECT_DELAY:-3s}
      WEBSOCKET_PING_INTERVAL: ${WEBSOCKET_PING_INTERVAL:-30s}
      WEBSOCKET_READ_TIMEOUT: ${WEBSOCKET_READ_TIMEOUT:-60s}
      WEBSOCKET_WRITE_TIMEOUT: ${WEBSOCKET_WRITE_TIMEOUT:-10s}
      WEBSOCKET_BUFFER_SIZE: ${WEBSOCKET_BUFFER_SIZE:-500}
      WEBSOCKET_BATCH_SIZE: ${WEBSOCKET_BATCH_SIZE:-20}
      WEBSOCKET_FLUSH_INTERVAL: ${WEBSOCKET_FLUSH_INTERVAL:-2s}
      WEBSOCKET_MAX_RETRIES: ${WEBSOCKET_MAX_RETRIES:-5}
      WEBSOCKET_RETRY_DELAY: ${WEBSOCKET_RETRY_DELAY:-1s}
      WEBSOCKET_SUBSCRIBE_TO_BLOCKS: ${WEBSOCKET_SUBSCRIBE_TO_BLOCKS:-true}
      WEBSOCKET_SUBSCRIBE_TO_TXS: ${WEBSOCKET_SUBSCRIBE_TO_TXS:-false}
      WEBSOCKET_SUBSCRIBE_TO_LOGS: ${WEBSOCKET_SUBSCRIBE_TO_LOGS:-false}
      WEBSOCKET_HEALTH_CHECK_INTERVAL: ${WEBSOCKET_HEALTH_CHECK_INTERVAL:-30s}

      # NATS Configuration (optional, for notifications)
      NATS_URL: ${NATS_URL:-nats://nats:4222}
      NATS_ENABLED: ${NATS_ENABLED:-true}
      NATS_STREAM_NAME: ${NATS_STREAM_NAME:-ETHEREUM_REALTIME}
      NATS_SUBJECT_PREFIX: ${NATS_SUBJECT_PREFIX:-ethereum.realtime}
      NATS_CONNECT_TIMEOUT: ${NATS_CONNECT_TIMEOUT:-10s}
      NATS_RECONNECT_ATTEMPTS: ${NATS_RECONNECT_ATTEMPTS:-5}
      NATS_RECONNECT_DELAY: ${NATS_RECONNECT_DELAY:-2s}
      NATS_MAX_PENDING_MESSAGES: ${NATS_MAX_PENDING_MESSAGES:-2000}

      # Monitoring Configuration
      METRICS_ENABLED: true
      HEALTH_CHECK_INTERVAL: 30s
    networks:
      - ethereum-websocket-network
    healthcheck:
      test: ["CMD", "ps", "aux"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1024M
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
    volumes:
      - ./websocket-listener.log:/app/websocket-listener.log

volumes:
  websocket_mongodb_data:
    driver: local
  websocket_nats_data:
    driver: local

networks:
  ethereum-websocket-network:
    driver: bridge